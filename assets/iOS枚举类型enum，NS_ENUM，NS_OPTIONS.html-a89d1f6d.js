import{_ as s,o as n,c as a,e as l}from"./app-6d1bfb61.js";const p={},e=l(`<blockquote><p>进入正题，今天介绍一下objective-c中的枚举</p></blockquote><h3 id="提要" tabindex="-1"><a class="header-anchor" href="#提要" aria-hidden="true">#</a> 提要</h3><ul><li><p>首先要知道的是,枚举值 它是一个整形(int) 并且,它不参加内存的占用和释放 枚举定义变量即可直接使用,不用初始化</p></li><li><p>三种类型的枚举</p><ul><li><strong>enum</strong> 在iOS6之前一般我们采用C风格的enum关键字可以定义枚举类型</li></ul><p>在iOS6之后引入两个宏来定义枚举实际上是将enum定义和typedef合二为一，并且采用不同的宏来从代码角度来区分。</p><ul><li><p><strong>NS_ENUM</strong> 普通枚举定义可参见UIKit.Framework中</p></li><li><p><strong>NS_OPTIONS</strong> 位运算及特殊枚举的定义。什么时候要用到这种方式呢? 那就是一个枚举变量可能要代表多个枚举值的时候. 其实给一个枚举变量赋予多个枚举值的时候,原理只是把各个枚举值加起来罢了. 当加起来以后,就获取了一个新的值,那么为了保证这个值的唯一性,这个时候就体现了位运算的重要作用. 位运算可以确保枚举值组合的唯一性. 因为位运算的计算方式是将二进制转换成十进制,也就是说,枚举值里面存取的是 计算后的十进制值. 打个比方: 通过上面的位运算方式设定好枚举以后,打印出来的枚举值分别是: 1 2 4 8 16 这5个数字,无论你如何组合在一起,也不会产生两个同样的数字.</p></li></ul><p>这两个宏的定义在Foundation.framework的NSObjCRuntime.h中：</p></li></ul><div class="language-objc line-numbers-mode" data-ext="objc"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">  		</span><span style="color:#C678DD;">#if</span><span style="color:#ABB2BF;"> (</span><span style="color:#61AFEF;">__cplusplus</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">&amp;&amp;</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">__cplusplus</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">&gt;=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">201103</span><span style="color:#E06C75;">L</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">&amp;&amp;</span><span style="color:#ABB2BF;"> (</span><span style="color:#61AFEF;">__has_extension</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">cxx_strong_enums</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">||</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">__has_feature</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">objc_fixed_enum</span><span style="color:#ABB2BF;">))) </span><span style="color:#56B6C2;">||</span><span style="color:#ABB2BF;"> (</span><span style="color:#56B6C2;">!</span><span style="color:#61AFEF;">__cplusplus</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">&amp;&amp;</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">__has_feature</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">objc_fixed_enum</span><span style="color:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#ABB2BF;">		</span><span style="color:#C678DD;">#define</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">NS_ENUM</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">_type, _name</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">enum</span><span style="color:#ABB2BF;"> _name : _type _name; </span><span style="color:#C678DD;">enum</span><span style="color:#ABB2BF;"> _name : _type</span></span>
<span class="line"><span style="color:#ABB2BF;">		</span><span style="color:#C678DD;">#if</span><span style="color:#ABB2BF;"> (</span><span style="color:#61AFEF;">__cplusplu</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#ABB2BF;">		</span><span style="color:#C678DD;">#define</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">NS_OPTIONS</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">_type, _name</span><span style="color:#ABB2BF;">) _type _name; </span><span style="color:#C678DD;">enum</span><span style="color:#ABB2BF;"> : _type  </span></span>
<span class="line"><span style="color:#ABB2BF;">		</span><span style="color:#C678DD;">#else</span><span style="color:#ABB2BF;">  </span></span>
<span class="line"><span style="color:#ABB2BF;">		</span><span style="color:#C678DD;">#define</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">NS_OPTIONS</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">_type, _name</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">enum</span><span style="color:#ABB2BF;"> _name : _type _name; </span><span style="color:#C678DD;">enum</span><span style="color:#ABB2BF;"> _name : _type  </span></span>
<span class="line"><span style="color:#ABB2BF;">		</span><span style="color:#C678DD;">#endif</span><span style="color:#ABB2BF;">  </span></span>
<span class="line"><span style="color:#ABB2BF;">		</span><span style="color:#C678DD;">#else</span><span style="color:#ABB2BF;">  </span></span>
<span class="line"><span style="color:#ABB2BF;">		</span><span style="color:#C678DD;">#define</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">NS_ENUM</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">_type, _name</span><span style="color:#ABB2BF;">) _type _name; </span><span style="color:#C678DD;">enum</span><span style="color:#ABB2BF;">  </span></span>
<span class="line"><span style="color:#ABB2BF;">				</span><span style="color:#C678DD;">#define</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">NS_OPTIONS</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">_type, _name</span><span style="color:#ABB2BF;">) _type _name; </span><span style="color:#C678DD;">enum</span><span style="color:#ABB2BF;">  </span></span>
<span class="line"><span style="color:#ABB2BF;">		</span><span style="color:#C678DD;">#endif</span><span style="color:#ABB2BF;">  </span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="举个🌰" tabindex="-1"><a class="header-anchor" href="#举个🌰" aria-hidden="true">#</a> 举个🌰</h3><div class="language-objc line-numbers-mode" data-ext="objc"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;font-style:italic;">//推荐的定义枚举类型的方式</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">typedef</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">NS_ENUM</span><span style="color:#ABB2BF;">(NSInteger, RWTLeftMenuTopItemType) {</span></span>
<span class="line"><span style="color:#ABB2BF;">     RWTLeftMenuTopItemMain, </span></span>
<span class="line"><span style="color:#ABB2BF;">     RWTLeftMenuTopItemShows,</span></span>
<span class="line"><span style="color:#ABB2BF;">     RWTLeftMenuTopItemSchedule </span></span>
<span class="line"><span style="color:#ABB2BF;">    }; </span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">typedef</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">NS_ENUM</span><span style="color:#ABB2BF;">(NSInteger, RWTGlobalConstants) { </span></span>
<span class="line"><span style="color:#ABB2BF;">    RWTPinSizeMin </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">, </span></span>
<span class="line"><span style="color:#ABB2BF;">    RWTPinSizeMax </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">5</span><span style="color:#ABB2BF;">, </span></span>
<span class="line"><span style="color:#ABB2BF;">    RWTPinCountMin </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">100</span><span style="color:#ABB2BF;">, </span></span>
<span class="line"><span style="color:#ABB2BF;">    RWTPinCountMax </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">500</span></span>
<span class="line"><span style="color:#ABB2BF;">    }; </span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">typedef</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">NS_OPTIONS</span><span style="color:#ABB2BF;">(NSInteger, Test) {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    TestA </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">//1 1 1等于号后面必须等于1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    TestB </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">&lt;&lt;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">//2 2 10 转换成 10进制 2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    TestC </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">&lt;&lt;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">//4 3 100 转换成 10进制 4</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    TestD </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">&lt;&lt;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">//8 4 1000 转换成 10进制 8</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    TestE </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">&lt;&lt;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">4</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;">//16 5 10000 转换成 10进制 16</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    };</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;font-style:italic;">//不推荐的方式</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">enum</span><span style="color:#ABB2BF;"> GlobalConstants { </span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#D19A66;">kMaxPinSize</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">5</span><span style="color:#ABB2BF;">, </span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#D19A66;">kMaxPinCount</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">500</span></span>
<span class="line"><span style="color:#ABB2BF;">    };</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>共同学习共同进步，加油。fighting😆</p></blockquote>`,7),o=[e];function B(t,c){return n(),a("div",null,o)}const i=s(p,[["render",B],["__file","iOS枚举类型enum，NS_ENUM，NS_OPTIONS.html.vue"]]);export{i as default};
